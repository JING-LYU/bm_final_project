library(tidyverse)
library(corrplot)
library(leaps)
cdi_data = read_csv("./data/cdi.csv") %>%
janitor::clean_names() %>%
mutate(
cty_state = str_c(cty,",",state),
docs_rate_1000 = 1000 * docs/pop, # Compute number of doctors/hospital beds per 1000 people.
beds_rate_1000 = 1000 * beds/pop,
crime_rate_1000 = 1000 * crimes/pop) %>% # Compute number of crimes per 1000 people.)
dplyr::select(-docs,-beds,-crimes) %>%
relocate(id,cty_state,cty)
knitr::kable(head(cdi_data))
cdi_data_exp = cdi_data %>%
dplyr::select(-id,-cty,-state, -cty_state,-region)
par(mfrow=c(2,3))
boxplot(cdi_data_exp$area,main="Area")
boxplot(cdi_data_exp$pop,main="Population")
boxplot(cdi_data_exp$pop18,main="Population 18-34")
boxplot(cdi_data_exp$pop65,main="Population 65+")
boxplot(cdi_data_exp$hsgrad,main="Highschool grads")
boxplot(cdi_data_exp$bagrad,main="Bachelor's grads")
par(mfrow=c(2,3))
boxplot(cdi_data_exp$poverty,main="Poverty Rate")
boxplot(cdi_data_exp$unemp,main="Unemployment Rate")
boxplot(cdi_data_exp$pcincome,main="Income Per Capita")
boxplot(cdi_data_exp$totalinc,main="Income Total")
boxplot(cdi_data_exp$docs_rate_1000,main="Active Physicians")
boxplot(cdi_data_exp$beds_rate_1000,main="Hospital Beds")
par(mfrow=c(1,1))
ggplot(cdi_data,aes(region)) +
geom_histogram(binwidth = 0.5) +
theme_classic() +
xlab("Region")+
ylab("Count")
boxplot(cdi_data_exp$crime_rate_1000,main="Crime Rate",horizontal = TRUE)
# data exploratory
pairs(cdi_data_exp)
# correlation plot
cdi_data_cor = cor(cdi_data_exp)
corrplot(cdi_data_cor, type = "upper", diag = FALSE)
crime_1000_cor = data.frame(cdi_data_cor) %>%
dplyr::select("Crime Rate (Per 1000)" = crime_rate_1000) %>%
t()
knitr::kable(crime_1000_cor,digits = 2)
cdi_model = cdi_data %>%
select(-id,-cty_state, -cty,-state) %>%
mutate(region = factor(region))
full.fit = lm(crime_rate_1000 ~ ., data = cdi_model)
summary(full.fit) %>%
broom::tidy() %>%
mutate(p_rank = rank(p.value))
backward = step(full.fit, direction='backward') %>%  broom::tidy() %>%  rename(backward = "term")
both = step(full.fit, direction = "both") %>% broom::tidy() %>% rename(stepwise = "term")
bind_cols(backward[-1,1],both[-1,1]) %>% knitr::kable()
# remove categorical variable: region
cdi_model_bestsub =
cdi_model %>%
select(-region)
mat = as.matrix(cdi_model_bestsub)
# Printing the 2 best models of each size, using the Cp criterion:
leaps(x = mat[,1:12], y = mat[,13], nbest = 2, method = "Cp") #9
# Printing the 2 best models of each size, using the adjusted R^2 criterion:
leaps(x = mat[,1:12], y = mat[,13], nbest = 2, method = "adjr2")
# Function regsubsets() performs a subset selection by identifying the "best" model that contains
b = regsubsets(crime_rate_1000 ~ ., data = cdi_model_bestsub)
rs = summary(b) # area, pop, pop18, poverty, unemp, pincome, totalinc, bed_rate_1000
# bagrad, unemp different with stepwise
# plot of Cp and Adj-R2 as functions of parameters
par(mfrow=c(1,2))
plot(2:9, rs$cp, xlab="No. of parameters", ylab="Cp Statistic")
abline(0,1)
plot(2:9, rs$adjr2, xlab="No of parameters", ylab="Adj R2")
rs$cp #8!!!
# Scatter plot
cdi_data %>%
ggplot(aes(poverty, crime_rate_1000)) + geom_point(color='blue') + theme_bw(base_size=20) +
geom_smooth(method='lm', se=TRUE, color='red') +
labs(x="Percent below poverty level", y="CRM_1000")
# Simple linear regression: crm_1000 vs poverty
cdi_pov = lm(crime_rate_1000 ~ poverty, data = cdi_data)
summary(cdi_pov)
cdi_pov = lm(crime_rate_1000 ~ poverty + beds_rate_1000, data = cdi_data)
summary(cdi_pov)
# this one is the best!
cdi_pov = lm(crime_rate_1000 ~ poverty + docs_rate_1000 , data = cdi_data)
summary(cdi_pov)
cdi_pov = lm(crime_rate_1000 ~ poverty + docs_rate_1000 + beds_rate_1000 , data = cdi_data)
summary(cdi_pov)
cdi_region = lm(crime_rate_1000 ~ factor(region), data = cdi_data) # fit model with factoring
summary(cdi_region)
ggplot(cdi_df, aes(x = poverty, y = pcincome, color = region)) +
geom_point() +
geom_smooth(method = "lm", se = F, aes(group = region, color = region))
# fit model with interaction
interact3 = lm(poverty ~ pcincome*region, data = cdi_df)
summary(interact3)
ggplot(cdi_df, aes(x = poverty, y = pcincome, color = region, alpha = .5)) +
geom_point() +
geom_smooth(method = "lm", se = F, aes(group = region, color = region, alpha = .5))
# fit model with interaction
interact3 = lm(poverty ~ pcincome*region, data = cdi_df)
summary(interact3)
ggplot(cdi_df, aes(x = poverty, y = pcincome, color = region, alpha = .5)) +
geom_point() +
geom_smooth(method = "lm", se = F, aes(group = region, color = region))
# fit model with interaction
interact3 = lm(poverty ~ pcincome*region, data = cdi_df)
summary(interact3)
ggplot(cdi_df, aes(x = pcincome, y = crime_rate_1000, color = region, alpha = .5)) +
geom_point() +
geom_smooth(method = "lm", se = F, aes(group = region, color = region))
# fit model with interaction
interact3 = lm(crime_rate_1000 ~ pcincome*region, data = cdi_df)
summary(interact3)
ggplot(cdi_df, aes(x = poverty, y = crime_rate_1000, color = region, alpha = .5)) +
geom_point() +
geom_smooth(method = "lm", se = F, aes(group = region, color = region))
# fit model with interaction
interact4 = lm(crime_rate_1000 ~ poverty*region, data = cdi_df)
summary(interact4)
ggplot(cdi_df, aes(x = beds_rate_1000, y = crime_rate_1000, color = region, alpha = .5)) +
geom_point() +
geom_smooth(method = "lm", se = F, aes(group = region, color = region))
# fit model with interaction
interact5 = lm(crime_rate_1000 ~ beds_rate_1000*region, data = cdi_df)
summary(interact5)
ggplot(cdi_df, aes(x = bagrad, y = crime_rate_1000, color = region, alpha = .5)) +
geom_point() +
geom_smooth(method = "lm", se = F, aes(group = region, color = region))
# fit model with interaction
interact6 = lm(crime_rate_1000 ~ bagrad*region, data = cdi_df)
summary(interact6)
knitr::opts_chunk$set(echo = TRUE,dpi=300)
library(tidyverse)
library(corrplot)
library(leaps)
cdi_data = read_csv("./data/cdi.csv") %>%
janitor::clean_names() %>%
mutate(
cty_state = str_c(cty,",",state),
docs_rate_1000 = 1000 * docs/pop, # Compute number of doctors/hospital beds per 1000 people.
beds_rate_1000 = 1000 * beds/pop,
crime_rate_1000 = 1000 * crimes/pop) %>% # Compute number of crimes per 1000 people.)
dplyr::select(-docs,-beds,-crimes) %>%
relocate(id,cty_state,cty)
knitr::kable(head(cdi_data))
cdi_data_exp = cdi_data %>%
dplyr::select(-id,-cty,-state, -cty_state,-region)
par(mfrow=c(2,3))
boxplot(cdi_data_exp$area,main="Area")
boxplot(cdi_data_exp$pop,main="Population")
boxplot(cdi_data_exp$pop18,main="Population 18-34")
boxplot(cdi_data_exp$pop65,main="Population 65+")
boxplot(cdi_data_exp$hsgrad,main="Highschool grads")
boxplot(cdi_data_exp$bagrad,main="Bachelor's grads")
par(mfrow=c(2,3))
boxplot(cdi_data_exp$poverty,main="Poverty Rate")
boxplot(cdi_data_exp$unemp,main="Unemployment Rate")
boxplot(cdi_data_exp$pcincome,main="Income Per Capita")
boxplot(cdi_data_exp$totalinc,main="Income Total")
boxplot(cdi_data_exp$docs_rate_1000,main="Active Physicians")
boxplot(cdi_data_exp$beds_rate_1000,main="Hospital Beds")
par(mfrow=c(1,1))
ggplot(cdi_data,aes(region)) +
geom_histogram(binwidth = 0.5) +
theme_classic() +
xlab("Region")+
ylab("Count")
boxplot(cdi_data_exp$crime_rate_1000,main="Crime Rate",horizontal = TRUE)
# data exploratory
pairs(cdi_data_exp)
# correlation plot
cdi_data_cor = cor(cdi_data_exp)
corrplot(cdi_data_cor, type = "upper", diag = FALSE)
crime_1000_cor = data.frame(cdi_data_cor) %>%
dplyr::select("Crime Rate (Per 1000)" = crime_rate_1000) %>%
t()
knitr::kable(crime_1000_cor,digits = 2)
cdi_model = cdi_data %>%
select(-id,-cty_state, -cty,-state) %>%
mutate(region = factor(region))
full.fit = lm(crime_rate_1000 ~ ., data = cdi_model)
summary(full.fit) %>%
broom::tidy() %>%
mutate(p_rank = rank(p.value))
backward = step(full.fit, direction='backward') %>%  broom::tidy() %>%  rename(backward = "term")
both = step(full.fit, direction = "both") %>% broom::tidy() %>% rename(stepwise = "term")
bind_cols(backward[-1,1],both[-1,1]) %>% knitr::kable()
sb = regsubsets(crime_rate_1000 ~ ., data = cdi_model, nvmax = 13)
sumsb = summary(sb) # area pop pop18 hsgrad bagrad poverty pcincome totalinc region beds_rate_1000
sumsb
# plot of Cp and Adj-R2 as functions of parameters
par(mfrow=c(1,2))
plot(2:14, sumsb$cp, xlab="No. of parameters", ylab="Cp Statistic")
abline(0,1)
plot(2:14, sumsb$adjr2, xlab="No of parameters", ylab="Adj R2")
# Scatter plot
cdi_data %>%
ggplot(aes(poverty, crime_rate_1000)) + geom_point(color='blue') + theme_bw(base_size=20) +
geom_smooth(method='lm', se=TRUE, color='red') +
labs(x="Percent below poverty level", y="CRM_1000")
# Simple linear regression: crm_1000 vs poverty
cdi_pov = lm(crime_rate_1000 ~ poverty, data = cdi_data)
summary(cdi_pov)
cdi_pov = lm(crime_rate_1000 ~ poverty + beds_rate_1000, data = cdi_data)
summary(cdi_pov)
# this one is the best!
cdi_pov = lm(crime_rate_1000 ~ poverty + docs_rate_1000 , data = cdi_data)
summary(cdi_pov)
cdi_pov = lm(crime_rate_1000 ~ poverty + docs_rate_1000 + beds_rate_1000 , data = cdi_data)
summary(cdi_pov)
cdi_region = lm(crime_rate_1000 ~ factor(region), data = cdi_data) # fit model with factoring
summary(cdi_region)
ggplot(cdi_df, aes(x = poverty, y = crime_rate_1000, color = region, alpha = .5)) +
geom_point() +
geom_smooth(method = "lm", se = F, aes(group = region, color = region))
# fit model with interaction
interact = lm(crime_rate_1000 ~ poverty*region, data = cdi_df)
summary(interact)
ggplot(cdi_data, aes(x = poverty, y = crime_rate_1000, color = region, alpha = .5)) +
geom_point() +
geom_smooth(method = "lm", se = F, aes(group = region, color = region))
# fit model with interaction
interact = lm(crime_rate_1000 ~ poverty*region, data = cdi_data)
summary(interact)
knitr::opts_chunk$set(echo = TRUE,dpi=300)
library(tidyverse)
library(corrplot)
library(leaps)
cdi_data = read_csv("./data/cdi.csv") %>%
janitor::clean_names() %>%
mutate(
cty_state = str_c(cty,",",state),
docs_rate_1000 = 1000 * docs/pop, # Compute number of doctors/hospital beds per 1000 people.
beds_rate_1000 = 1000 * beds/pop,
density = as.numeric(pop)/as.numeric(area),
crime_rate_1000 = 1000 * crimes/pop) %>% # Compute number of crimes per 1000 people.
dplyr::select(-docs,-beds,-crimes) %>%
relocate(id,cty_state,cty)
knitr::kable(head(cdi_data))
cdi_data_exp = cdi_data %>%
dplyr::select(-id,-cty,-state, -cty_state,-region)
par(mfrow=c(2,3))
boxplot(cdi_data_exp$area,main="Area")
boxplot(cdi_data_exp$pop,main="Population")
boxplot(cdi_data_exp$pop18,main="Population 18-34")
boxplot(cdi_data_exp$pop65,main="Population 65+")
boxplot(cdi_data_exp$hsgrad,main="Highschool grads")
boxplot(cdi_data_exp$bagrad,main="Bachelor's grads")
par(mfrow=c(2,3))
boxplot(cdi_data_exp$poverty,main="Poverty Rate")
boxplot(cdi_data_exp$unemp,main="Unemployment Rate")
boxplot(cdi_data_exp$pcincome,main="Income Per Capita")
boxplot(cdi_data_exp$totalinc,main="Income Total")
boxplot(cdi_data_exp$docs_rate_1000,main="Active Physicians")
boxplot(cdi_data_exp$beds_rate_1000,main="Hospital Beds")
par(mfrow=c(1,1))
ggplot(cdi_data,aes(region)) +
geom_histogram(binwidth = 0.5) +
theme_classic() +
xlab("Region")+
ylab("Count")
boxplot(cdi_data_exp$crime_rate_1000,main="Crime Rate",horizontal = TRUE)
# data exploratory
pairs(cdi_data_exp)
# correlation plot
cdi_data_cor = cor(cdi_data_exp)
corrplot(cdi_data_cor, type = "upper", diag = FALSE)
crime_1000_cor = data.frame(cdi_data_cor) %>%
dplyr::select("Crime Rate (Per 1000)" = crime_rate_1000) %>%
t()
knitr::kable(crime_1000_cor,digits = 2)
cdi_model = cdi_data %>%
dplyr::select(-id,-cty_state, -cty,-state) %>%
mutate(region = factor(region))
full.fit = lm(crime_rate_1000 ~ ., data = cdi_model)
summary(full.fit) %>%
broom::tidy() %>%
mutate(p_rank = rank(p.value))
backward = step(full.fit, direction='backward') %>%  broom::tidy() %>%  rename(backward = "term")
both = step(full.fit, direction = "both") %>% broom::tidy() %>% rename(stepwise = "term")
bind_cols(backward[-1,1],both[-1,1]) %>% knitr::kable()
sb = regsubsets(crime_rate_1000 ~ ., data = cdi_model, nvmax = 14)
sumsb = summary(sb) # pop pop18 hsgrad bagrad poverty pcincome totalinc region beds_rate_1000 density
sumsb
# plot of Cp and Adj-R2 as functions of parameters
par(mfrow=c(1,2))
plot(2:15, sumsb$cp, xlab="No. of parameters", ylab="Cp Statistic")
abline(0,1)
plot(2:15, sumsb$adjr2, xlab="No of parameters", ylab="Adj R2")
# Scatter plot
cdi_data %>%
ggplot(aes(poverty, crime_rate_1000)) + geom_point(color='blue') + theme_bw(base_size=20) +
geom_smooth(method='lm', se=TRUE, color='red') +
labs(x="Percent below poverty level", y="CRM_1000")
# Simple linear regression: crm_1000 vs poverty
cdi_pov = lm(crime_rate_1000 ~ poverty, data = cdi_data)
summary(cdi_pov)
cdi_pov = lm(crime_rate_1000 ~ poverty + beds_rate_1000, data = cdi_data)
summary(cdi_pov)
# this one is the best!
cdi_pov = lm(crime_rate_1000 ~ poverty + docs_rate_1000 , data = cdi_data)
summary(cdi_pov)
cdi_pov = lm(crime_rate_1000 ~ poverty + docs_rate_1000 + beds_rate_1000 , data = cdi_data)
summary(cdi_pov)
cdi_region = lm(crime_rate_1000 ~ factor(region), data = cdi_data) # fit model with factoring
summary(cdi_region)
ggplot(cdi_data, aes(x = poverty, y = crime_rate_1000, color = region, alpha = .5)) +
geom_point() +
geom_smooth(method = "lm", se = F, aes(group = region, color = region))
# fit model with interaction
interact = lm(crime_rate_1000 ~ poverty*region, data = cdi_data)
summary(interact)
knitr::opts_chunk$set(echo = TRUE,dpi=300)
library(tidyverse)
library(corrplot)
library(leaps)
library(performance)
library(MASS)
cdi_data = read_csv("./data/cdi.csv") %>%
janitor::clean_names() %>%
mutate(
cty_state = str_c(cty,",",state),
docs_rate_1000 = 1000 * docs/pop, # Compute number of doctors/hospital beds per 1000 people.
beds_rate_1000 = 1000 * beds/pop,
density = as.numeric(pop)/as.numeric(area),
crime_rate_1000 = 1000 * crimes/pop) %>% # Compute number of crimes per 1000 people.
dplyr::select(-docs,-beds,-crimes) %>%
relocate(id,cty_state,cty)
knitr::kable(head(cdi_data))
cdi_data_exp = cdi_data %>%
dplyr::select(-id,-cty,-state, -cty_state,-region)
par(mfrow=c(2,3))
boxplot(cdi_data_exp$area,main="Area")
boxplot(cdi_data_exp$pop,main="Population")
boxplot(cdi_data_exp$pop18,main="Population 18-34")
boxplot(cdi_data_exp$pop65,main="Population 65+")
boxplot(cdi_data_exp$hsgrad,main="Highschool grads")
boxplot(cdi_data_exp$bagrad,main="Bachelor's grads")
par(mfrow=c(2,3))
boxplot(cdi_data_exp$poverty,main="Poverty Rate")
boxplot(cdi_data_exp$unemp,main="Unemployment Rate")
boxplot(cdi_data_exp$pcincome,main="Income Per Capita")
boxplot(cdi_data_exp$totalinc,main="Income Total")
boxplot(cdi_data_exp$docs_rate_1000,main="Active Physicians")
boxplot(cdi_data_exp$beds_rate_1000,main="Hospital Beds")
par(mfrow=c(1,1))
ggplot(cdi_data,aes(region)) +
geom_histogram(binwidth = 0.5) +
theme_classic() +
xlab("Region")+
ylab("Count")
boxplot(cdi_data_exp$crime_rate_1000,main="Crime Rate",horizontal = TRUE)
# data exploratory
pairs(cdi_data_exp)
# correlation plot
cdi_data_cor = cor(cdi_data_exp)
corrplot(cdi_data_cor, type = "upper", diag = FALSE)
crime_1000_cor = data.frame(cdi_data_cor) %>%
dplyr::select("Crime Rate (Per 1000)" = crime_rate_1000) %>%
t()
knitr::kable(crime_1000_cor,digits = 2)
cdi_model = cdi_data %>%
dplyr::select(-id,-cty_state, -cty,-state) %>%
mutate(region = factor(region))
full.fit = lm(crime_rate_1000 ~ ., data = cdi_model)
summary(full.fit) %>%
broom::tidy() %>%
mutate(p_rank = rank(p.value))
backward = step(full.fit, direction='backward') %>%  broom::tidy() %>%  rename(backward = "term")
both = step(full.fit, direction = "both") %>% broom::tidy() %>% rename(stepwise = "term")
bind_cols(backward[-1,1],both[-1,1]) %>% knitr::kable()
sb = regsubsets(crime_rate_1000 ~ ., data = cdi_model, nvmax = 14)
sumsb = summary(sb) # pop pop18 hsgrad bagrad poverty pcincome totalinc region beds_rate_1000 density
sumsb
# plot of Cp and Adj-R2 as functions of parameters
par(mfrow=c(1,2))
plot(2:15, sumsb$cp, xlab="No. of parameters", ylab="Cp Statistic")
abline(0,1)
plot(2:15, sumsb$adjr2, xlab="No of parameters", ylab="Adj R2")
ggplot(cdi_data, aes(x = poverty, y = crime_rate_1000, color = region, alpha = .5)) +
geom_point() +
geom_smooth(method = "lm", se = F, aes(group = region, color = region))
# fit model with interaction
interact = lm(crime_rate_1000 ~ poverty*region, data = cdi_data)
summary(interact)
fit_test = lm(crime_rate_1000 ~
pop + pop18
+ pcincome + totalinc + region +
beds_rate_1000 + density +
poverty*pcincome, data = cdi_model)
summary(fit_test)
anova(fit_test)
check_collinearity(fit_test)
plot(fit_test, which = 4)
cdiOut = cdi_model[-c(1,6),]
# fit model with and without influential points
with = fit_test
without = lm(crime_rate_1000 ~
pop + pop18
+ pcincome + totalinc + region +
beds_rate_1000 + density +
poverty*pcincome, data = cdiOut)
summary(with); summary(without)
par(mfrow = c(2,2))
plot(without)
boxcox(without)
knitr::opts_chunk$set(echo = TRUE,dpi=300)
library(tidyverse)
library(corrplot)
library(leaps)
library(performance)
library(MASS)
cdi_data = read_csv("./data/cdi.csv") %>%
janitor::clean_names() %>%
mutate(
cty_state = str_c(cty,",",state),
docs_rate_1000 = 1000 * docs/pop, # Compute number of doctors/hospital beds per 1000 people.
beds_rate_1000 = 1000 * beds/pop,
density = as.numeric(pop)/as.numeric(area),
crime_rate_1000 = 1000 * crimes/pop) %>% # Compute number of crimes per 1000 people.
dplyr::select(-docs,-beds,-crimes) %>%
relocate(id,cty_state,cty)
knitr::kable(head(cdi_data))
cdi_data_exp = cdi_data %>%
dplyr::select(-id,-cty,-state, -cty_state)
cdi_data_original = cdi_data_exp
cdi_data_exp = cdi_data_exp %>%
mutate(
area = ifelse(area %in% boxplot.stats(cdi_data_exp$area)$out,NA,area),
pop = ifelse(pop %in% boxplot.stats(cdi_data_exp$pop)$out,NA,pop),
crime_rate_1000 = ifelse(crime_rate_1000 %in% boxplot.stats(cdi_data_exp$crime_rate_1000)$out,NA,crime_rate_1000),
poverty = ifelse(poverty %in% boxplot.stats(cdi_data_exp$poverty)$out,NA,poverty)
) %>%
na.omit()
par(mfrow=c(2,3))
boxplot(cdi_data_exp$area,main="Area")
boxplot(cdi_data_exp$pop,main="Population")
boxplot(cdi_data_exp$pop18,main="Population 18-34")
boxplot(cdi_data_exp$pop65,main="Population 65+")
boxplot(cdi_data_exp$hsgrad,main="Highschool grads")
boxplot(cdi_data_exp$bagrad,main="Bachelor's grads")
par(mfrow=c(2,3))
boxplot(cdi_data_exp$poverty,main="Poverty Rate")
boxplot(cdi_data_exp$unemp,main="Unemployment Rate")
boxplot(cdi_data_exp$pcincome,main="Income Per Capita")
boxplot(cdi_data_exp$totalinc,main="Income Total")
boxplot(cdi_data_exp$docs_rate_1000,main="Active Physicians")
boxplot(cdi_data_exp$beds_rate_1000,main="Hospital Beds")
par(mfrow=c(1,1))
ggplot(cdi_data,aes(region)) +
geom_histogram(binwidth = 0.5) +
theme_classic() +
xlab("Region")+
ylab("Count")
boxplot(cdi_data_exp$crime_rate_1000,main="Crime Rate",horizontal = TRUE)
# data exploratory
pairs(cdi_data_exp)
# correlation plot
cdi_data_cor = cor(cdi_data_exp)
corrplot(cdi_data_cor, type = "upper", diag = FALSE)
crime_1000_cor = data.frame(cdi_data_cor) %>%
dplyr::select("Crime Rate (Per 1000)" = crime_rate_1000) %>%
t()
knitr::kable(crime_1000_cor,digits = 2)
#cdi_model = cdi_data %>%
#  dplyr::select(-id,-cty_state, -cty,-state) %>%
#  mutate(region = factor(region))
cdi_model = cdi_data_exp %>% mutate(region = factor(region))
full.fit = lm(crime_rate_1000 ~ ., data = cdi_model)
summary(full.fit) %>%
broom::tidy() %>%
mutate(p_rank = rank(p.value))
backward = step(full.fit, direction='backward') %>%  broom::tidy() %>%  rename(backward = "term")
both = step(full.fit, direction = "both") %>% broom::tidy() %>% rename(stepwise = "term")
bind_cols(backward[-1,1],both[-1,1]) %>% knitr::kable()
sb = regsubsets(crime_rate_1000 ~ ., data = cdi_model, nvmax = 14)
sumsb = summary(sb) # pop pop18 hsgrad bagrad poverty pcincome totalinc region beds_rate_1000 density
sumsb
# plot of Cp and Adj-R2 as functions of parameters
par(mfrow=c(1,2))
plot(2:15, sumsb$cp, xlab="No. of parameters", ylab="Cp Statistic")
abline(0,1)
plot(2:15, sumsb$adjr2, xlab="No of parameters", ylab="Adj R2")
ggplot(cdi_data, aes(x = poverty, y = crime_rate_1000, color = region, alpha = .5)) +
geom_point() +
geom_smooth(method = "lm", se = F, aes(group = region, color = region))
# fit model with interaction
interact = lm(crime_rate_1000 ~ poverty*region, data = cdi_data)
summary(interact)
fit_test = lm(crime_rate_1000 ~
pop + pop18
+ pcincome + totalinc + region +
beds_rate_1000 + density +
poverty*pcincome, data = cdi_model)
summary(fit_test)
anova(fit_test)
check_collinearity(fit_test)
plot(fit_test, which = 4)
cdiOut = cdi_model[-c(1,6),]
# fit model with and without influential points
with = fit_test
without = lm(crime_rate_1000 ~
pop + pop18
+ pcincome + totalinc + region +
beds_rate_1000 + density +
poverty*pcincome, data = cdiOut)
summary(with); summary(without)
par(mfrow = c(2,2))
plot(without)
boxcox(without)
