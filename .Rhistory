dplyr::select(-id,-cty,-state, -cty_state)
cdi_data_original = cdi_data_exp
cdi_data_exp = cdi_data_exp %>%
mutate(
area = ifelse(area %in% boxplot.stats(cdi_data_exp$area)$out,NA,area),
pop = ifelse(pop %in% boxplot.stats(cdi_data_exp$pop)$out,NA,pop),
crime_rate_1000 = ifelse(crime_rate_1000 %in% boxplot.stats(cdi_data_exp$crime_rate_1000)$out,NA,crime_rate_1000),
poverty = ifelse(poverty %in% boxplot.stats(cdi_data_exp$poverty)$out,NA,poverty)
) %>%
na.omit()
par(mfrow=c(2,3))
boxplot(cdi_data_exp$area,main="Area")
boxplot(cdi_data_exp$pop,main="Population")
boxplot(cdi_data_exp$pop18,main="Population 18-34")
boxplot(cdi_data_exp$pop65,main="Population 65+")
boxplot(cdi_data_exp$hsgrad,main="Highschool grads")
boxplot(cdi_data_exp$bagrad,main="Bachelor's grads")
par(mfrow=c(2,3))
boxplot(cdi_data_exp$poverty,main="Poverty Rate")
boxplot(cdi_data_exp$unemp,main="Unemployment Rate")
boxplot(cdi_data_exp$pcincome,main="Income Per Capita")
boxplot(cdi_data_exp$totalinc,main="Income Total")
boxplot(cdi_data_exp$docs_rate_1000,main="Active Physicians")
boxplot(cdi_data_exp$beds_rate_1000,main="Hospital Beds")
par(mfrow=c(1,1))
ggplot(cdi_data,aes(region)) +
geom_histogram(binwidth = 0.5) +
theme_classic() +
xlab("Region")+
ylab("Count")
boxplot(cdi_data_exp$crime_rate_1000,main="Crime Rate",horizontal = TRUE)
# data exploratory
pairs(cdi_data_exp)
# correlation plot
cdi_data_cor = cor(cdi_data_exp)
corrplot(cdi_data_cor, type = "upper", diag = FALSE)
crime_1000_cor = data.frame(cdi_data_cor) %>%
dplyr::select("Crime Rate (Per 1000)" = crime_rate_1000) %>%
t()
knitr::kable(crime_1000_cor,digits = 2)
knitr::opts_chunk$set(
fig.width = 8,
fig.asp = .6,
out.width = "90%",
echo = TRUE, warning = FALSE, message = FALSE,
dpi=300
)
library(tidyverse)
library(corrplot)
library(leaps)
library(performance)
library(MASS)
library(caret)
knitr::opts_chunk$set(
fig.width = 8,
fig.asp = .6,
out.width = "90%",
echo = TRUE, warning = FALSE, dpi=300
)
cdi_data = read_csv("./data/cdi.csv") %>%
janitor::clean_names() %>%
mutate(
cty_state = str_c(cty,",",state),
docs_rate_1000 = 1000 * docs/pop, # Compute number of doctors/hospital beds per 1000 people.
beds_rate_1000 = 1000 * beds/pop,
density = as.numeric(pop)/as.numeric(area),
crime_rate_1000 = 1000 * crimes/pop) %>% # Compute number of crimes per 1000 people.
dplyr::select(-docs,-beds,-crimes) %>%
relocate(id,cty_state,cty)
#knitr::kable(head(cdi_data))
cdi_data_exp = cdi_data %>%
dplyr::select(-id,-cty,-state, -cty_state)
cdi_data_original = cdi_data_exp
cdi_data_exp = cdi_data_exp %>%
mutate(
area = ifelse(area %in% boxplot.stats(cdi_data_exp$area)$out,NA,area),
pop = ifelse(pop %in% boxplot.stats(cdi_data_exp$pop)$out,NA,pop),
crime_rate_1000 = ifelse(crime_rate_1000 %in% boxplot.stats(cdi_data_exp$crime_rate_1000)$out,NA,crime_rate_1000),
poverty = ifelse(poverty %in% boxplot.stats(cdi_data_exp$poverty)$out,NA,poverty)
) %>%
na.omit()
par(mfrow=c(4,3))
boxplot(cdi_data_exp$area,main="Area")
boxplot(cdi_data_exp$pop,main="Population")
boxplot(cdi_data_exp$pop18,main="Population 18-34")
boxplot(cdi_data_exp$pop65,main="Population 65+")
boxplot(cdi_data_exp$hsgrad,main="Highschool grads")
boxplot(cdi_data_exp$bagrad,main="Bachelor's grads")
#par(mfrow=c(2,3))
boxplot(cdi_data_exp$poverty,main="Poverty Rate")
boxplot(cdi_data_exp$unemp,main="Unemployment Rate")
boxplot(cdi_data_exp$pcincome,main="Income Per Capita")
boxplot(cdi_data_exp$totalinc,main="Income Total")
boxplot(cdi_data_exp$docs_rate_1000,main="Active Physicians")
boxplot(cdi_data_exp$beds_rate_1000,main="Hospital Beds")
par(mfrow=c(1,1))
ggplot(cdi_data,aes(region)) +
geom_histogram(binwidth = 0.5) +
theme_classic() +
xlab("Region")+
ylab("Count")
boxplot(cdi_data_exp$crime_rate_1000,main="Crime Rate",horizontal = TRUE)
# data exploratory
pairs(cdi_data_exp)
# correlation plot
cdi_data_cor = cor(cdi_data_exp)
corrplot(cdi_data_cor, type = "upper", diag = FALSE)
crime_1000_cor = data.frame(cdi_data_cor) %>%
dplyr::select("Crime Rate (Per 1000)" = crime_rate_1000) %>%
t()
#knitr::kable(crime_1000_cor,digits = 2)
# Remove high leverage points
cdi_data_clean = cdi_data[cdi_data$area >= quantile(cdi_data$area,0.002) & cdi_data$area <= quantile(cdi_data$area,0.998),]
cdi_data_clean = cdi_data_clean[cdi_data_clean$pop >= quantile(cdi_data_clean$pop,0.002) & cdi_data_clean$pop <= quantile(cdi_data_clean$pop,0.998),]
cdi_data_clean = cdi_data_clean[cdi_data_clean$pop18 >= quantile(cdi_data_clean$pop18,0.002) & cdi_data_clean$pop18 <= quantile(cdi_data_clean$pop18,0.998),]
cdi_data_clean = cdi_data_clean[cdi_data_clean$pop65 >= quantile(cdi_data_clean$pop65,0.002) & cdi_data_clean$pop65 <= quantile(cdi_data_clean$pop65,0.998),]
cdi_data_clean = cdi_data_clean[cdi_data_clean$hsgrad >= quantile(cdi_data_clean$hsgrad,0.002) & cdi_data_clean$hsgrad <= quantile(cdi_data_clean$hsgrad,0.998),]
cdi_data_clean = cdi_data_clean[cdi_data_clean$bagrad >= quantile(cdi_data_clean$bagrad,0.002) & cdi_data_clean$bagrad <= quantile(cdi_data_clean$bagrad,0.998),]
cdi_data_clean = cdi_data_clean[cdi_data_clean$poverty >= quantile(cdi_data_clean$poverty,0.002) & cdi_data_clean$poverty <= quantile(cdi_data_clean$poverty,0.998),]
cdi_data_clean = cdi_data_clean[cdi_data_clean$unemp >= quantile(cdi_data_clean$unemp,0.002) & cdi_data_clean$unemp <= quantile(cdi_data_clean$unemp,0.998),]
cdi_data_clean = cdi_data_clean[cdi_data_clean$pcincome >= quantile(cdi_data_clean$pcincome,0.002) & cdi_data_clean$pcincome <= quantile(cdi_data_clean$pcincome,0.998),]
cdi_data_clean = cdi_data_clean[cdi_data_clean$totalinc >= quantile(cdi_data_clean$totalinc,0.002) & cdi_data_clean$totalinc <= quantile(cdi_data_clean$totalinc,0.998),]
cdi_data_clean = cdi_data_clean[cdi_data_clean$docs_rate_1000 >= quantile(cdi_data_clean$docs_rate_1000,0.002) & cdi_data_clean$docs_rate_1000 <= quantile(cdi_data_clean$docs_rate_1000,0.998),]
cdi_data_clean = cdi_data_clean[cdi_data_clean$beds_rate_1000 >= quantile(cdi_data_clean$beds_rate_1000,0.002) & cdi_data_clean$beds_rate_1000 <= quantile(cdi_data_clean$beds_rate_1000,0.998),]
cdi_data_clean = cdi_data_clean[cdi_data_clean$beds_rate_1000 >= quantile(cdi_data_clean$beds_rate_1000,0.002) & cdi_data_clean$beds_rate_1000 <= quantile(cdi_data_clean$beds_rate_1000,0.998),]
cdi_data_clean = cdi_data_clean[cdi_data_clean$density >= quantile(cdi_data_clean$density,0.002) & cdi_data_clean$density <= quantile(cdi_data_clean$density,0.998),]
cdi_data_clean = cdi_data_clean[cdi_data_clean$crime_rate_1000 >= quantile(cdi_data_clean$crime_rate_1000,0.002) & cdi_data_clean$beds_rate_1000 <= quantile(cdi_data_clean$crime_rate_1000,0.998),]
par(mfrow=c(3,4))
boxplot(cdi_data_clean$area,main="Area")
boxplot(cdi_data_clean$pop,main="Population")
boxplot(cdi_data_clean$pop18,main="Population 18-34")
boxplot(cdi_data_clean$pop65,main="Population 65+")
boxplot(cdi_data_clean$hsgrad,main="Highschool grads")
boxplot(cdi_data_clean$bagrad,main="Bachelor's grads")
boxplot(cdi_data_clean$poverty,main="Poverty Rate")
boxplot(cdi_data_clean$unemp,main="Unemployment Rate")
boxplot(cdi_data_clean$pcincome,main="Income Per Capita")
boxplot(cdi_data_clean$totalinc,main="Income Total")
boxplot(cdi_data_clean$docs_rate_1000,main="Active Physicians")
boxplot(cdi_data_clean$beds_rate_1000,main="Hospital Beds")
cdi_data_clean = cdi_data_clean %>%
dplyr::select(-id,-cty_state, -cty,-state) %>%
mutate(region = factor(region))
set.seed(1)
dt = sort(sample(nrow(cdi_data_clean), nrow(cdi_data_clean)*.9))
train_data = cdi_data_clean[dt,]
test_data = cdi_data_clean[-dt,]
cdi_model = train_data
full.fit = lm(crime_rate_1000 ~ ., data = cdi_model)
summary(full.fit) %>%
broom::tidy() %>%
mutate(p_rank = rank(p.value))
backward = step(full.fit, direction='backward') %>%  broom::tidy() %>%  rename(backward = "term")
both = step(full.fit, direction = "both") %>% broom::tidy() %>% rename(stepwise = "term")
bind_cols(backward[-1,1],both[-1,1]) %>% knitr::kable()
sb = regsubsets(crime_rate_1000 ~ ., data = cdi_model, nvmax = 14)
sumsb = summary(sb) # pop pop18 hsgrad bagrad poverty pcincome totalinc region beds_rate_1000 density
coef(sb, id = 12)
par(mfrow=c(1,2))
plot(2:15, sumsb$cp, xlab="No. of parameters", ylab="Cp Statistic")
abline(0,1)
plot(2:15, sumsb$adjr2, xlab="No of parameters", ylab="Adj R2")
fit_nest = lm(crime_rate_1000 ~
pop + pop18 + bagrad +
poverty + unemp + pcincome + pcincome*pop + region +
beds_rate_1000 + density, data = cdi_model)
summary(fit_nest)
par(mfrow = c(2,2))
plot(fit_nest)
boxcox(fit_nest)
cdi_model_trans = cdi_model %>%
mutate(
y_sqrt = sqrt(crime_rate_1000)
)
fit_nest_trans = lm(y_sqrt ~
pop + pop18 + bagrad +
poverty + unemp + pcincome + pcincome*pop + region +
beds_rate_1000 + density, data = cdi_model_trans)
summary(fit_nest_trans)
# diagnose
par(mfrow = c(2,2))
plot(fit_nest_trans)
poverty_status = cdi_model %>%
mutate(national_poverty = if_else(poverty > 13.5, "higher", "lower"))
ggplot(poverty_status, aes(x = pcincome, y = crime_rate_1000, color = national_poverty)) +
geom_point(alpha = .5) +
geom_smooth(method = "lm", se = F, aes(group = national_poverty, color = national_poverty)) +
labs(
title = "Crime Rate and Per Capita Income by Poverty Status",
x = "Per Capita Income",
y = "Crime Rate ",
color = "Comparison with national avergae"
)
fit_int1 = lm(crime_rate_1000 ~
pop + pop18 + bagrad +
poverty + unemp + pcincome + pcincome*pop + region +
beds_rate_1000 + density +
poverty*pcincome, data = cdi_model)
summary(fit_int1) %>% broom::tidy()
check_collinearity(fit_int1)
# remove density
fit_int1 = lm(crime_rate_1000 ~
pop + pop18 + bagrad +
poverty + unemp + pcincome + pcincome*pop + region +
beds_rate_1000  +
poverty*pcincome, data = cdi_model)
summary(fit_int1)
check_collinearity(fit_int1)
# remove bagrad
fit_int1 = lm(crime_rate_1000 ~
pop + pop18 +
poverty + unemp + pcincome + pcincome*pop + region +
beds_rate_1000  +
poverty*pcincome, data = cdi_model)
summary(fit_int1)
check_collinearity(fit_int1)
par(mfrow = c(2,2))
plot(fit_int1)
boxcox(fit_int1)
cdi_model_trans = cdi_model %>%
mutate(
y_sqrt = sqrt(crime_rate_1000)
)
fit_int1_trans = lm(y_sqrt ~
pop + pop18 +
poverty + unemp + pcincome + pcincome*pop + region +
beds_rate_1000  +
poverty*pcincome, data = cdi_model_trans)
summary(fit_int1_trans)
# diagnose
par(mfrow = c(2,2))
plot(fit_int1_trans)
bagrad_status = cdi_model %>%
mutate(national_bagrad = if_else(bagrad > 20.8, "higher", "lower"))
ggplot(bagrad_status, aes(x = pcincome, y = crime_rate_1000, color = national_bagrad)) +
geom_point(alpha = .5) +
geom_smooth(method = "lm", se = F, aes(group = national_bagrad, color = national_bagrad)) +
ylim(0,150) +
labs(
title = "Crime Rate and Per Capita Income by Percent Bachelor’s Degrees Status",
x = "Per Capita Income",
y = "Crime Rate",
color = "Comparison with national avergae"
)
fit_int2 = lm(crime_rate_1000 ~
pop + pop18 + bagrad +
poverty + unemp + pcincome + pcincome*pop + region +
beds_rate_1000 + density +
pcincome*bagrad, data = cdi_model)
summary(fit_int2)
check_collinearity(fit_int2)
par(mfrow = c(2,2))
plot(fit_int2)
boxcox(fit_int2)
fit_int2_trans = lm(y_sqrt ~
pop + pop18 + bagrad +
poverty + unemp + pcincome + pcincome*pop + region +
beds_rate_1000 + density +
pcincome*bagrad, data = cdi_model_trans)
summary(fit_int2_trans)
# diagnose
par(mfrow=c(2,2))
plot(fit_int2_trans, which = 1) # worse
plot(fit_int2_trans, which = 2)
set.seed(1)
train = trainControl(method = "cv", number = 5)
model_train1 = train(crime_rate_1000 ~
pop + pop18 + bagrad +
poverty + unemp + pcincome + pcincome*pop + region +
beds_rate_1000 + density,data = cdi_model,
trControl = train,
method = 'lm',
na.action = na.pass)
print(model_train1)
set.seed(1)
train = trainControl(method = "cv", number = 5)
model_train2 = train(crime_rate_1000 ~
pop + pop18 +
poverty + unemp + pcincome + pcincome*pop + region +
beds_rate_1000  +
poverty*pcincome, data = cdi_model,
trControl = train,
method = 'lm',
na.action = na.pass)
summary(model_train2)
set.seed(1)
train = trainControl(method = "cv", number = 5)
model_train3 = train(crime_rate_1000 ~
pop + pop18 + bagrad +
poverty + unemp + pcincome + pcincome*pop + region +
beds_rate_1000 + density +
pcincome*bagrad,  data = cdi_model,
trControl = train,
method = 'lm',
na.action = na.pass)
summary(model_train3)
model <- c("1", "2", "3")
RMSE <- c(round(model_train1$results$RMSE, 2),  round(model_train2$results$RMSE,2),
round(model_train3$results$RMSE, 2))
R_sq <- c(round(model_train1$results$Rsquared, 3),
round(model_train2$results$Rsquared, 3),
round(model_train3$results$Rsquared, 3))
RMSE_table <- data.frame(model, RMSE, R_sq)
coefs_1 = model_train1$finalModel$coefficients
names_1 = model_train1$finalModel$xNames
knitr::kable(RMSE_table)
test_data = test_data %>%
mutate(
y = crime_rate_1000,
y_model_1 = predict(model_train1,test_data),
y_model_2 = predict(model_train2,test_data),
y_model_3 = predict(model_train3,test_data))
RMSPE_1 = sqrt(mean((test_data$y-test_data$y_model_1)^2))
RMSPE_2 = sqrt(mean((test_data$y-test_data$y_model_2)^2))
RMSPE_3 = sqrt(mean((test_data$y-test_data$y_model_3)^2))
model_assessment =
tibble(
RMSPE_1 = round(RMSPE_1,2),
RMSPE_2 = round(RMSPE_2,2),
RMSPE_3 = round(RMSPE_3,2)) %>%
pivot_longer(RMSPE_1:RMSPE_3,
names_to = "model",
names_prefix = "RMSPE_",
values_to = "RMSPE") %>%
left_join(RMSE_table,by="model") %>%
dplyr::select(Model=model,R_square = R_sq,RMSE,RMSPE)
knitr::kable(model_assessment)
cdi_data = read_csv("./data/cdi.csv") %>%
janitor::clean_names() %>%
mutate(
cty_state = str_c(cty,",",state),
docs_rate_1000 = 1000 * docs/pop, # Compute number of doctors/hospital beds per 1000 people.
beds_rate_1000 = 1000 * beds/pop,
density = as.numeric(pop)/as.numeric(area),
crime_rate_1000 = 1000 * crimes/pop) %>% # Compute number of crimes per 1000 people.
dplyr::select(-docs,-beds,-crimes) %>%
relocate(id,cty_state,cty)
knitr::kable(head(cdi_data))
var <- c("id", "cty", "state", "area",	"pop", "pop18",	"pop65",	"docs",	"beds",	"crimes",	"hsgrad",	"bagrad",	"poverty",	"unemp",	"pcincome",	"totalinc",	"region")
var_meaning <- c("ID number", "
County name", "State name", "Land area", "Total population", "Percent of population aged 18-34", "Percent of population aged 65+", "Number of active physicians", "Number of hospital beds", "Total serious crimes", "Percent high school graduates", "Percent bachelor’s degrees", "Percent below poverty level", "Percent unemployment", "Per capita income", "Total personal income", "Geographic region")
var_info <- data.frame(var, var_meaning)
knitr::kable(var_info)
var <- c("id", "cty", "state", "area","region",	"pop", "pop18",	"pop65",	"docs_rate_1000",	"beds_rate_1000",	"crimes_rate_1000",	"hsgrad",	"bagrad",	"poverty",	"unemp",	"pcincome",	"totalinc",	"region")
var_meaning <- c("ID number", "County name", "State name", "Land area","Population Density" ,"Total population", "Percent of population aged 18-34", "Percent of population aged 65+", "Number of active physicians per 1000 people", "Number of hospital beds per 1000 people", "Number of serious crimes per 1000 people", "Percent high school graduates", "Percent bachelor’s degrees", "Percent below poverty level", "Percent unemployment", "Per capita income", "Total personal income", "Geographic region")
var_info <- data.frame(var, var_meaning)
knitr::kable(var_info)
var <- c("id", "cty", "state", "area","region",	"pop", "pop18",	"pop65",	"docs_rate_1000",	"beds_rate_1000",	"crime_rate_1000",	"hsgrad",	"bagrad",	"poverty",	"unemp",	"pcincome",	"totalinc",	"region")
var_meaning <- c("ID number", "County name", "State name", "Land area","Population Density" ,"Esimate 1990 population", "Percent of population aged 18-34", "Percent of population aged 65+", "Number of active physicians per 1000 people", "Number of hospital beds per 1000 people", "Number of serious crimes per 1000 people", "Percent high school graduates", "Percent bachelor’s degrees", "Percent below poverty level", "Percent unemployment", "Per capita income", "Total personal income", "Geographic region")
var_info <- data.frame(var, var_meaning)
knitr::kable(var_info)
knitr::opts_chunk$set(
fig.width = 8,
fig.asp = .6,
out.width = "90%",
echo = TRUE, warning = FALSE, message = FALSE,
dpi=300
)
library(tidyverse)
library(corrplot)
library(leaps)
library(performance)
library(MASS)
library(caret)
knitr::opts_chunk$set(
fig.width = 8,
fig.asp = .6,
out.width = "90%",
echo = TRUE, warning = FALSE, dpi=300
)
cdi_data = read_csv("./data/cdi.csv") %>%
janitor::clean_names() %>%
mutate(
cty_state = str_c(cty,",",state),
docs_rate_1000 = 1000 * docs/pop, # Compute number of doctors/hospital beds per 1000 people.
beds_rate_1000 = 1000 * beds/pop,
density = as.numeric(pop)/as.numeric(area),
crime_rate_1000 = 1000 * crimes/pop) %>% # Compute number of crimes per 1000 people.
dplyr::select(-docs,-beds,-crimes) %>%
relocate(id,cty_state,cty)
#knitr::kable(head(cdi_data))
cdi_data_exp = cdi_data %>%
dplyr::select(-id,-cty,-state, -cty_state)
cdi_data_original = cdi_data_exp
cdi_data_exp = cdi_data_exp %>%
mutate(
area = ifelse(area %in% boxplot.stats(cdi_data_exp$area)$out,NA,area),
pop = ifelse(pop %in% boxplot.stats(cdi_data_exp$pop)$out,NA,pop),
crime_rate_1000 = ifelse(crime_rate_1000 %in% boxplot.stats(cdi_data_exp$crime_rate_1000)$out,NA,crime_rate_1000),
poverty = ifelse(poverty %in% boxplot.stats(cdi_data_exp$poverty)$out,NA,poverty)
) %>%
na.omit()
knitr::opts_chunk$set(
fig.width = 8,
fig.asp = .6,
out.width = "90%",
echo = TRUE, warning = FALSE, message = FALSE,
dpi=300
)
boxplot(cdi_data_exp$crime_rate_1000,main="Crime Rate",horizontal = TRUE)
knitr::opts_chunk$set(
fig.width = 8,
fig.asp = .6,
out.width = "90%",
echo = FALSE, warning = FALSE, message = FALSE,
dpi=300
)
par(mfrow=c(1,2))
plot(2:15, sumsb$cp, xlab="No. of parameters", ylab="Cp Statistic")
abline(0,1)
plot(2:15, sumsb$adjr2, xlab="No of parameters", ylab="Adj R2")
bind_cols(backward[-1,1],both[-1,1]) %>% knitr::kable(caption = "Vairable selected from stepwise regression")
full.fit = lm(crime_rate_1000 ~ ., data = cdi_model)
summary(full.fit) %>%
broom::tidy() %>%
mutate(p_rank = rank(p.value))
backward = step(full.fit, direction='backward') %>%  broom::tidy() %>%  rename(backward = "term")
both = step(full.fit, direction = "both") %>% broom::tidy() %>% rename(stepwise = "term")
full.fit = lm(crime_rate_1000 ~ ., data = cdi_model)
summary(full.fit) %>%
broom::tidy() %>%
mutate(p_rank = rank(p.value))
backward = step(full.fit, direction='backward') %>%  broom::tidy() %>%  rename(backward = "term")
both = step(full.fit, direction = "both") %>% broom::tidy() %>% rename(stepwise = "term")
cdi_model = cdi_data_clean
cdi_model = cdi_data_clean
cdi_model = cdi_data_clean
sb = regsubsets(crime_rate_1000 ~ ., data = cdi_model, nvmax = 14)
sumsb = summary(sb) # pop pop18 hsgrad bagrad poverty pcincome totalinc region beds_rate_1000 density
coef(sb, id = 12)
par(mfrow=c(4,3))
boxplot(cdi_data_exp$area,main="Area")
boxplot(cdi_data_exp$pop,main="Population")
boxplot(cdi_data_exp$pop18,main="Population 18-34")
boxplot(cdi_data_exp$pop65,main="Population 65+")
boxplot(cdi_data_exp$hsgrad,main="Highschool grads")
boxplot(cdi_data_exp$bagrad,main="Bachelor's grads")
#par(mfrow=c(2,3))
boxplot(cdi_data_exp$poverty,main="Poverty Rate")
boxplot(cdi_data_exp$unemp,main="Unemployment Rate")
boxplot(cdi_data_exp$pcincome,main="Income Per Capita")
boxplot(cdi_data_exp$totalinc,main="Income Total")
boxplot(cdi_data_exp$docs_rate_1000,main="Active Physicians")
boxplot(cdi_data_exp$beds_rate_1000,main="Hospital Beds")
par(mfrow=c(1,1))
ggplot(cdi_data,aes(region)) +
geom_histogram(binwidth = 0.5) +
theme_classic() +
xlab("Region")+
ylab("Count") +
labs(title = "Histogram: Counts of four regions")
par(mfrow=c(4,3))
boxplot(cdi_data_exp$area,main="Area")
boxplot(cdi_data_exp$pop,main="Population")
boxplot(cdi_data_exp$pop18,main="Population 18-34")
boxplot(cdi_data_exp$pop65,main="Population 65+")
boxplot(cdi_data_exp$hsgrad,main="Highschool grads")
boxplot(cdi_data_exp$bagrad,main="Bachelor's grads")
#par(mfrow=c(2,3))
boxplot(cdi_data_exp$poverty,main="Poverty Rate")
boxplot(cdi_data_exp$unemp,main="Unemployment Rate")
boxplot(cdi_data_exp$pcincome,main="Income Per Capita")
boxplot(cdi_data_exp$totalinc,main="Income Total")
boxplot(cdi_data_exp$docs_rate_1000,main="Active Physicians")
boxplot(cdi_data_exp$beds_rate_1000,main="Hospital Beds")
par(mfrow=c(1,1))
ggplot(cdi_data,aes(region)) +
geom_histogram(binwidth = 0.5) +
theme_classic() +
xlab("Region")+
ylab("Count") +
labs(title = "Histogram: Counts of four regions")
par(mfrow = c(2,3))
boxplot(cdi_data_exp$area,main = "Area")
boxplot(cdi_data_exp$pop,main = "Population")
boxplot(cdi_data_exp$pop18,main = "Population 18-34")
boxplot(cdi_data_exp$pop65,main = "Population 65+")
boxplot(cdi_data_exp$hsgrad,main = "Highschool grads")
boxplot(cdi_data_exp$bagrad,main = "Bachelor's grads")
par(mfrow = c(2,3))
boxplot(cdi_data_exp$poverty,main = "Poverty Rate")
boxplot(cdi_data_exp$unemp,main = "Unemployment Rate")
boxplot(cdi_data_exp$pcincome,main = "Income Per Capita")
boxplot(cdi_data_exp$totalinc,main = "Income Total")
boxplot(cdi_data_exp$docs_rate_1000,main = "Active Physicians")
boxplot(cdi_data_exp$beds_rate_1000,main = "Hospital Beds")
# correlation plot
cdi_data_cor = cor(cdi_data_exp)
corrplot(cdi_data_cor, type = "upper", diag = FALSE)
pairs(cdi_data_exp)
cdi_data_exp %>%
dplyr::select(-region) %>%
pairs()
cdi_data_exp %>%
dplyr::select(-region) %>%
pairs(alpha = .5)
cdi_data_exp %>%
dplyr::select(-region) %>%
pairs(alpha = .1)
cdi_data_exp %>%
dplyr::select(-region) %>%
pairs(alpha = .001)
par(mfrow = c(2,2))
plot(fit_int1)
boxcox(fit_int1)
boxcox(fit_int1)
par(mfrow = c(2,2))
plot(fit_int1)
par(mfrow = c(2,2))
plot(fit_int1_trans)
par(mfrow = c(2,2))
plot(fit_int2)
