a = step(full.fit, direction='backward') %>%
broom::tidy()
b = step(full.fit, direction = "both") %>% broom::tidy()
inner_join(a,b,by = "term")
a[1,]
a[,1]
bind_cols(a[,1],b[,1])
a = step(full.fit, direction='backward') %>%
broom::tidy()
b = step(full.fit, direction = "both") %>% broom::tidy()
bind_cols(a[,1],b[,1],.name_repair = c("backward", "stepwise"))
bind_cols(a[,1],b[,1],column.names =c("backward","both"))
bind_cols(a[,1],b[,1],column.names =c("backward","both"))
bind_cols(a[,1],b[,1],row.names = c("backward","both"))
a[,1]
both = step(full.fit, direction = "both") %>% broom::tidy() %>% rename(term = "both")
both = step(full.fit, direction = "both") %>% broom::tidy() %>% rename(both = "term")
both
backward = step(full.fit, direction='backward') %>% rename(backward = "term")
backward = step(full.fit, direction='backward') %>%  broom::tidy() %>%  rename(backward = "term")
both = step(full.fit, direction = "both") %>% broom::tidy() %>% rename(both = "term")
bind_cols(vackward[,1],both[,1])
bind_cols(backward[,1],both[,1])
backward = step(full.fit, direction='backward') %>%  broom::tidy() %>%  rename(backward = "term")
both = step(full.fit, direction = "both") %>% broom::tidy() %>% rename(stepwise = "term")
bind_cols(backward[,1],both[,1])
bind_cols(backward[,1],both[,1]) %>% knitr::kable()
bind_cols(backward[-1,1],both[-1,1]) %>% knitr::kable()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
birth = read_csv("./lowbwt_ALL.csv") %>%
mutate(smoke = factor(smoke), race = factor(race))
# birthweight vs age
ggplot(birth) +
geom_point(aes(x = age, y = bwt)) +
theme_bw()
# SLR
slr = lm(bwt ~ age, data = birth)
summary(slr)
# birthweight vs age by smoking status
ggplot(birth, aes(x = age, y = bwt, color = smoke)) +
geom_point() +
geom_smooth(method="lm", se=F, aes(group = smoke, color = smoke)) +
theme_bw()
# fit model with interaction
interact = lm(bwt ~ age*smoke, data = birth)
summary(interact)
library(tidyverse)
library(faraway)
library(broom)
# read data
data_hosp = read_csv("./R - Module 18/Hospital.csv")
# read data
data_hosp = read_csv("Hospital.csv")
# Scatter plot with regression line overlaid and 95% confidence bands
data_hosp %>%
ggplot(aes(BEDS, LOS)) + geom_point(color='blue') + theme_bw(base_size=20) +
geom_smooth(method='lm', se=TRUE, color='red') +
labs(x="Number of beds", y="Length of stay (days)")
# Simple linear regression: Length of stay (LOS) vs number of BEDS
reg_hos = lm(LOS ~ BEDS, data = data_hosp)
summary(reg_hos)
# Get the ANOVA table
anova(reg_hos)
# MLR LOS vs BEDS + INFRISK
regmult1_hos = lm(LOS ~ BEDS + INFRISK, data = data_hosp)
summary(regmult1_hos)
# MLR LOS vs BEDS + INFRISK + NURSE
regmulti2_hos = lm(LOS ~ BEDS + INFRISK + NURSE, data = data_hosp)
summary(regmulti2_hos)
# Recode MEDSCHL: Yes:1 and No:0
data_hosp = mutate(data_hosp, MEDSCHL = ifelse(MEDSCHL == 1, 1, 0))
# MLR
regmult2_hos = lm(LOS ~ INFRISK + MEDSCHL, data = data_hosp)
summary(regmult2_hos)
# fit MLR
regmult3_hos = lm(LOS ~ INFRISK + MEDSCHL, data = data_hosp)
summary(regmult3_hos)
# fit model without factoring - wrong
cat1 = lm(LOS ~ REGION, data = data_hosp)
summary(cat1)
# fit model with factoring
cat2 = lm(LOS ~ factor(REGION), data = data_hosp)
summary(cat2)
# no intercept model
cat3 = lm(LOS ~ 0 + factor(REGION), data = data_hosp)
summary(cat3)
# change regerence from 1 to 3
data_hosp = mutate(data_hosp, REGION = relevel(factor(REGION), ref = 3))
cat4 = lm(LOS ~ REGION, data = data_hosp)
summary(cat4)
# MLR
regmulti4_hos = lm(LOS ~ INFRISK + MEDSCHL + factor(REGION), data = data_hosp)
summary(regmulti4_hos)
# 'General' global test for all predictors
anova(regmult4_hos)
# MLR
regmulti4_hos = lm(LOS ~ INFRISK + MEDSCHL + factor(REGION), data = data_hosp)
summary(regmulti4_hos)
# 'General' global test for all predictors
anova(regmulti4_hos)
# MLR with interaction
regmult5_hos = lm(LOS ~ INFRISK*MEDSCHL, data = data_hosp)
summary(regmult5_hos)
# Vizualize interaction for reg5: LOS vs INFRISK by MS affiliation
qplot(x = INFRISK, y = LOS, color = factor(MEDSCHL), data = data_hosp) +
geom_smooth(method = "lm", se=FALSE) +
theme_bw() +
labs(x="Infection Risk", y="Length of stay (days)", color = "Med School")
# Lines look fairly parallel, in line with the non-sig interaction result.
# MLR
regmulti4_hos = lm(LOS ~ INFRISK + MEDSCHL + factor(REGION), data = data_hosp)
summary(regmulti4_hos)
# 'General' global test for all predictors
anova(regmulti4_hos)
# MLR with interaction
regmult5_hos = lm(LOS ~ INFRISK*MEDSCHL, data = data_hosp)
summary(regmult5_hos)
# Vizualize interaction for reg5: LOS vs INFRISK by MS affiliation
qplot(x = INFRISK, y = LOS, color = factor(MEDSCHL), data = data_hosp) +
geom_smooth(method = "lm", se=FALSE) +
theme_bw() +
labs(x="Infection Risk", y="Length of stay (days)", color = "Med School")
# Lines look fairly parallel, in line with the non-sig interaction result.
regmult5_hos = lm(LOS ~ INFRISK*MEDSCHL, data = data_hosp)
summary(regmult5_hos)
knitr::opts_chunk$set(echo = TRUE,dpi=300)
library(tidyverse)
library(corrplot)
library(leaps)
cdi_data = read_csv("./data/cdi.csv") %>%
janitor::clean_names() %>%
mutate(
cty_state = str_c(cty,",",state),
docs_rate_1000 = 1000 * docs/pop, # Compute number of doctors/hospital beds per 1000 people.
beds_rate_1000 = 1000 * beds/pop,
crime_rate_1000 = 1000 * crimes/pop) %>% # Compute number of crimes per 1000 people.)
dplyr::select(-docs,-beds,-crimes) %>%
relocate(id,cty_state,cty)
knitr::kable(head(cdi_data))
cdi_data_exp = cdi_data %>%
dplyr::select(-id,-cty,-state, -cty_state,-region)
par(mfrow=c(2,3))
boxplot(cdi_data_exp$area,main="Area")
boxplot(cdi_data_exp$pop,main="Population")
boxplot(cdi_data_exp$pop18,main="Population 18-34")
boxplot(cdi_data_exp$pop65,main="Population 65+")
boxplot(cdi_data_exp$hsgrad,main="Highschool grads")
boxplot(cdi_data_exp$bagrad,main="Bachelor's grads")
par(mfrow=c(2,3))
boxplot(cdi_data_exp$poverty,main="Poverty Rate")
boxplot(cdi_data_exp$unemp,main="Unemployment Rate")
boxplot(cdi_data_exp$pcincome,main="Income Per Capita")
boxplot(cdi_data_exp$totalinc,main="Income Total")
boxplot(cdi_data_exp$docs_rate_1000,main="Active Physicians")
boxplot(cdi_data_exp$beds_rate_1000,main="Hospital Beds")
par(mfrow=c(1,1))
ggplot(cdi_data,aes(region)) +
geom_histogram(binwidth = 0.5) +
theme_classic() +
xlab("Region")+
ylab("Count")
boxplot(cdi_data_exp$crime_rate_1000,main="Crime Rate",horizontal = TRUE)
# data exploratory
pairs(cdi_data_exp)
# correlation plot
cdi_data_cor = cor(cdi_data_exp)
corrplot(cdi_data_cor, type = "upper", diag = FALSE)
crime_1000_cor = data.frame(cdi_data_cor) %>%
dplyr::select("Crime Rate (Per 1000)" = crime_rate_1000) %>%
t()
knitr::kable(crime_1000_cor,digits = 2)
step(mult.fit, direction = 'forward')
mult.fit.final = lm(Lnsurvival ~ Enzyme + Progindex + Alcheav + Bloodclot,data = surg)
step(mult.fit, direction = "both")
full.fit = lm(crime_rate_1000 ~ ., data = cdi_model)
summary(full.fit) %>%
broom::tidy() %>%
mutate(p_rank = rank(p.value))
step(full.fit, direction='backward')
model = lm(crime_rate_1000 ~ bagrad*pop., data = cdi_model)
cdi_model
model = lm(crime_rate_1000 ~ bagrad * pop, data = cdi_model)
summary(model)
model = lm(crime_rate_1000 ~ bagrad + pop, data = cdi_model)
model = lm(crime_rate_1000 ~ bagrad * pop, data = cdi_model)
bind_cols(backward[-1,1],both[-1,1]) %>% knitr::kable()
model = lm(crime_rate_1000 ~ pcincome + bagrad, data = cdi_model)
model = lm(crime_rate_1000 ~ pcincome * bagrad, data = cdi_model)
summary(model)
model = lm(crime_rate_1000 ~ pcincome + bagrad, data = cdi_model)
model = lm(crime_rate_1000 ~ pcincome * bagrad, data = cdi_model)
summary(model)
model1 = lm(crime_rate_1000 ~ pcincome + bagrad, data = cdi_model)
summary(model1)
model2 = lm(crime_rate_1000 ~ pcincome * bagrad, data = cdi_model)
summary(model2)
model1 = lm(crime_rate_1000 ~ pop + area, data = cdi_model)
summary(model1)
model2 = lm(crime_rate_1000 ~ pop * area, data = cdi_model)
summary(model2)
# MLR
regmulti4_hos = lm(LOS ~ INFRISK + MEDSCHL + factor(REGION), data = data_hosp)
summary(regmulti4_hos)
# 'General' global test for all predictors
anova(regmulti4_hos)
# MLR with interaction
regmult5_hos = lm(LOS ~ INFRISK*MEDSCHL, data = data_hosp)
summary(regmult5_hos)
# Vizualize interaction for reg5: LOS vs INFRISK by MS affiliation
qplot(x = INFRISK, y = LOS, color = factor(MEDSCHL), data = data_hosp) +
geom_smooth(method = "lm", se=FALSE) +
theme_bw() +
labs(x="Infection Risk", y="Length of stay (days)", color = "Med School")
# Lines look fairly parallel, in line with the non-sig interaction result.
egmult5_hos = lm(LOS ~ INFRISK*MEDSCHL, data = data_hosp)
summary(regmult5_hos)
anova(regmulti4_hos)
regmulti4_hos = lm(LOS ~ INFRISK + MEDSCHL + factor(REGION), data = data_hosp)
summary(regmulti4_hos)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(corrplot)
cdi_data = read.csv("./data/cdi.csv") %>%
janitor::clean_names() %>%
mutate(
cty_state = str_c(cty,",",state),
docs_rate_1000 = 1000 * docs/pop, # Compute number of doctors/hospital beds per 1000 people.
beds_rate_1000 = 1000 * beds/pop,
crime_rate_1000 = 1000 * crimes/pop,
density = as.numeric(pop)/as.numeric(area)) %>% # Compute number of crimes per 1000 people.)
dplyr::select(-docs,-beds,-crimes) %>%
relocate(id,cty_state,cty,density)
knitr::kable(head(cdi_data))
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(tidyverse)
library(MASS) # boxcox
library(performance) # vif
# read data
surg = read_csv("./Surgical.csv")
# fit model
fit1 = lm(Survival ~ Bloodclot + Progindex + Enzyme + Liver, data = surg)
# residual vs fitted plot
plot(fit1, which = 1)
# QQ plot
plot(fit1, which = 2)
# fit model - log transform the outcome
fit2 = lm(Lnsurvival ~ Bloodclot + Progindex + Enzyme + Liver,  data = surg)
# residual vs fitted plot
plot(fit2, which = 1)
# QQ plot
plot(fit2, which = 2)
check_collinearity(reg3)
# Generate data
set.seed(1)
data.multi = tibble(age = round(rnorm(100, 30, 10),2)) %>%
mutate(height = 25 + 2*age + rnorm(100, 0, 15),
age_copy = age,
age_new = age + rnorm(100, 0, 2))
# Correlation matrix for all variables
cor(data.multi)
# Scatter plot matrix for all variables
pairs(data.multi)
# Fit a simple linear regression with original age
reg1 = lm(height ~ age, data = data.multi)
summary(reg1)
# Fit a linear regression with original age and age_copy
reg2 = lm(height ~ age + age_copy, data = data.multi)
summary(reg2)
# Fit a linear regression with original age and age_new
reg3 = lm(height ~ age + age_new, data = data.multi)
summary(reg3)
reg3 = lm(height ~ age_new+ age, data = data.multi)
summary(reg3)
# Fit a linear regression with original age, age_copy and age_new
reg4 = lm(height ~ age + age_copy + age_new, data = data.multi)
summary(reg4)
# Calculate the variance inflation factor (VIF)
check_collinearity(reg3)
check_collinearity(reg3)
bind_cols(backward[-1,1],both[-1,1]) %>% knitr::kable()
fit_test = lm(crime_rate_1000 ~
pop + pop18
+ pcincome + totalinc + region +
beds_rate_1000 + density +
poverty*pcincome, data = cdi_model)
knitr::opts_chunk$set(echo = TRUE,dpi=300)
library(tidyverse)
library(corrplot)
library(leaps)
library(performance)
library(MASS)
cdi_data = read_csv("./data/cdi.csv") %>%
janitor::clean_names() %>%
mutate(
cty_state = str_c(cty,",",state),
docs_rate_1000 = 1000 * docs/pop, # Compute number of doctors/hospital beds per 1000 people.
beds_rate_1000 = 1000 * beds/pop,
density = as.numeric(pop)/as.numeric(area),
crime_rate_1000 = 1000 * crimes/pop) %>% # Compute number of crimes per 1000 people.
dplyr::select(-docs,-beds,-crimes) %>%
relocate(id,cty_state,cty)
knitr::kable(head(cdi_data))
cdi_data_exp = cdi_data %>%
dplyr::select(-id,-cty,-state, -cty_state)
par(mfrow=c(2,3))
boxplot(cdi_data_exp$area,main="Area")
boxplot(cdi_data_exp$pop,main="Population")
boxplot(cdi_data_exp$pop18,main="Population 18-34")
boxplot(cdi_data_exp$pop65,main="Population 65+")
boxplot(cdi_data_exp$hsgrad,main="Highschool grads")
boxplot(cdi_data_exp$bagrad,main="Bachelor's grads")
par(mfrow=c(2,3))
boxplot(cdi_data_exp$poverty,main="Poverty Rate")
boxplot(cdi_data_exp$unemp,main="Unemployment Rate")
boxplot(cdi_data_exp$pcincome,main="Income Per Capita")
boxplot(cdi_data_exp$totalinc,main="Income Total")
boxplot(cdi_data_exp$docs_rate_1000,main="Active Physicians")
boxplot(cdi_data_exp$beds_rate_1000,main="Hospital Beds")
par(mfrow=c(1,1))
ggplot(cdi_data,aes(region)) +
geom_histogram(binwidth = 0.5) +
theme_classic() +
xlab("Region")+
ylab("Count")
boxplot(cdi_data_exp$crime_rate_1000,main="Crime Rate",horizontal = TRUE)
# data exploratory
pairs(cdi_data_exp)
# correlation plot
cdi_data_cor = cor(cdi_data_exp)
corrplot(cdi_data_cor, type = "upper", diag = FALSE)
crime_1000_cor = data.frame(cdi_data_cor) %>%
dplyr::select("Crime Rate (Per 1000)" = crime_rate_1000) %>%
t()
knitr::kable(crime_1000_cor,digits = 2)
#cdi_model = cdi_data %>%
#  dplyr::select(-id,-cty_state, -cty,-state) %>%
#  mutate(region = factor(region))
cdi_model = cdi_data_exp %>% mutate(region = factor(region))
full.fit = lm(crime_rate_1000 ~ ., data = cdi_model)
summary(full.fit) %>%
broom::tidy() %>%
mutate(p_rank = rank(p.value))
backward = step(full.fit, direction='backward') %>%  broom::tidy() %>%  rename(backward = "term")
both = step(full.fit, direction = "both") %>% broom::tidy() %>% rename(stepwise = "term")
bind_cols(backward[-1,1],both[-1,1]) %>% knitr::kable()
sb = regsubsets(crime_rate_1000 ~ ., data = cdi_model, nvmax = 14)
sumsb = summary(sb) # pop pop18 hsgrad bagrad poverty pcincome totalinc region beds_rate_1000 density
sumsb
# plot of Cp and Adj-R2 as functions of parameters
par(mfrow=c(1,2))
plot(2:15, sumsb$cp, xlab="No. of parameters", ylab="Cp Statistic")
abline(0,1)
plot(2:15, sumsb$adjr2, xlab="No of parameters", ylab="Adj R2")
ggplot(cdi_data, aes(x = poverty, y = crime_rate_1000, color = region, alpha = .5)) +
geom_point() +
geom_smooth(method = "lm", se = F, aes(group = region, color = region))
# fit model with interaction
interact = lm(crime_rate_1000 ~ poverty*region, data = cdi_data)
summary(interact)
fit_test = lm(crime_rate_1000 ~
pop + pop18
+ pcincome + totalinc + region +
beds_rate_1000 + density +
poverty*pcincome, data = cdi_model)
summary(fit_test)
anova(fit_test)
check_collinearity(fit_test)
plot(fit_test, which = 4)
cdiOut = cdi_model[-c(1,6),]
# fit model with and without influential points
with = fit_test
without = lm(crime_rate_1000 ~
pop + pop18
+ pcincome + totalinc + region +
beds_rate_1000 + density +
poverty*pcincome, data = cdiOut)
summary(with); summary(without)
par(mfrow = c(2,2))
plot(without)
boxcox(without)
knitr::opts_chunk$set(echo = TRUE,dpi=300)
library(tidyverse)
library(corrplot)
library(leaps)
library(performance)
library(MASS)
cdi_data = read_csv("./data/cdi.csv") %>%
janitor::clean_names() %>%
mutate(
cty_state = str_c(cty,",",state),
docs_rate_1000 = 1000 * docs/pop, # Compute number of doctors/hospital beds per 1000 people.
beds_rate_1000 = 1000 * beds/pop,
density = as.numeric(pop)/as.numeric(area),
crime_rate_1000 = 1000 * crimes/pop) %>% # Compute number of crimes per 1000 people.
dplyr::select(-docs,-beds,-crimes) %>%
relocate(id,cty_state,cty)
knitr::kable(head(cdi_data))
cdi_data_exp = cdi_data %>%
dplyr::select(-id,-cty,-state, -cty_state)
cdi_data_original = cdi_data_exp
cdi_data_exp = cdi_data_exp %>%
mutate(
area = ifelse(area %in% boxplot.stats(cdi_data_exp$area)$out,NA,area),
pop = ifelse(pop %in% boxplot.stats(cdi_data_exp$pop)$out,NA,pop),
crime_rate_1000 = ifelse(crime_rate_1000 %in% boxplot.stats(cdi_data_exp$crime_rate_1000)$out,NA,crime_rate_1000),
poverty = ifelse(poverty %in% boxplot.stats(cdi_data_exp$poverty)$out,NA,poverty)
) %>%
na.omit()
par(mfrow=c(2,3))
boxplot(cdi_data_exp$area,main="Area")
boxplot(cdi_data_exp$pop,main="Population")
boxplot(cdi_data_exp$pop18,main="Population 18-34")
boxplot(cdi_data_exp$pop65,main="Population 65+")
boxplot(cdi_data_exp$hsgrad,main="Highschool grads")
boxplot(cdi_data_exp$bagrad,main="Bachelor's grads")
par(mfrow=c(2,3))
boxplot(cdi_data_exp$poverty,main="Poverty Rate")
boxplot(cdi_data_exp$unemp,main="Unemployment Rate")
boxplot(cdi_data_exp$pcincome,main="Income Per Capita")
boxplot(cdi_data_exp$totalinc,main="Income Total")
boxplot(cdi_data_exp$docs_rate_1000,main="Active Physicians")
boxplot(cdi_data_exp$beds_rate_1000,main="Hospital Beds")
par(mfrow=c(1,1))
ggplot(cdi_data,aes(region)) +
geom_histogram(binwidth = 0.5) +
theme_classic() +
xlab("Region")+
ylab("Count")
boxplot(cdi_data_exp$crime_rate_1000,main="Crime Rate",horizontal = TRUE)
# data exploratory
pairs(cdi_data_exp)
# correlation plot
cdi_data_cor = cor(cdi_data_exp)
corrplot(cdi_data_cor, type = "upper", diag = FALSE)
crime_1000_cor = data.frame(cdi_data_cor) %>%
dplyr::select("Crime Rate (Per 1000)" = crime_rate_1000) %>%
t()
knitr::kable(crime_1000_cor,digits = 2)
#cdi_model = cdi_data %>%
#  dplyr::select(-id,-cty_state, -cty,-state) %>%
#  mutate(region = factor(region))
cdi_model = cdi_data_original %>% mutate(region = factor(region))
full.fit = lm(crime_rate_1000 ~ ., data = cdi_model)
summary(full.fit) %>%
broom::tidy() %>%
mutate(p_rank = rank(p.value))
backward = step(full.fit, direction='backward') %>%  broom::tidy() %>%  rename(backward = "term")
both = step(full.fit, direction = "both") %>% broom::tidy() %>% rename(stepwise = "term")
bind_cols(backward[-1,1],both[-1,1]) %>% knitr::kable()
sb = regsubsets(crime_rate_1000 ~ ., data = cdi_model, nvmax = 14)
sumsb = summary(sb) # pop pop18 hsgrad bagrad poverty pcincome totalinc region beds_rate_1000 density
sumsb
# plot of Cp and Adj-R2 as functions of parameters
par(mfrow=c(1,2))
plot(2:15, sumsb$cp, xlab="No. of parameters", ylab="Cp Statistic")
abline(0,1)
plot(2:15, sumsb$adjr2, xlab="No of parameters", ylab="Adj R2")
ggplot(cdi_data, aes(x = poverty, y = crime_rate_1000, color = region, alpha = .5)) +
geom_point() +
geom_smooth(method = "lm", se = F, aes(group = region, color = region))
# fit model with interaction
interact = lm(crime_rate_1000 ~ poverty*region, data = cdi_data)
summary(interact)
fit_test = lm(crime_rate_1000 ~
pop + pop18
+ pcincome + totalinc + region +
beds_rate_1000 + density +
poverty*pcincome, data = cdi_model)
summary(fit_test)
anova(fit_test)
check_collinearity(fit_test)
plot(fit_test, which = 4)
cdiOut = cdi_model[-c(1,6),]
# fit model with and without influential points
with = fit_test
without = lm(crime_rate_1000 ~
pop + pop18
+ pcincome + totalinc + region +
beds_rate_1000 + density +
poverty*pcincome, data = cdiOut)
summary(with); summary(without)
par(mfrow = c(2,2))
plot(without)
boxcox(without)
library(tidyverse)
library(corrplot)
library(ALSM)
#library(p8105.datasets)
#library(leaflet)
knitr::opts_chunk$set(
fig.width = 6,
fig.asp = .6,
out.width = "90%"
)
theme_set(theme_minimal() + theme(legend.position = "bottom"))
options(
ggplot2.continuous.colour = "viridis",
ggplot2.continuous.fill = "viridis"
)
scale_colour_discrete = scale_colour_viridis_d
scale_fill_discrete = scale_fill_viridis_d
cdi_data = read_csv("./data/cdi.csv") %>%
janitor::clean_names() %>%
mutate(
cty_state = str_c(cty,",",state),
docs_rate_1000 = 1000 * docs/pop, # Compute number of doctors/hospital beds per 1000 people.
beds_rate_1000 = 1000 * beds/pop,
density = as.numeric(pop)/as.numeric(area),
crime_rate_1000 = 1000 * crimes/pop) %>% # Compute number of crimes per 1000 people.
dplyr::select(-docs,-beds,-crimes) %>%
relocate(id,cty_state,cty)
